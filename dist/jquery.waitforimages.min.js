/*! waitForImages jQuery Plugin - v1.4.1 - 2013-01-17
* https://github.com/alexanderdickson/waitForImages
* Copyright (c) 2013 Alex Dickson; Licensed MIT */
(function(e){var t="waitForImages";e.waitForImages={hasImageProperties:["backgroundImage","listStyleImage","borderImage","borderCornerImage"]},e.expr[":"].uncached=function(t){if(!e(t).is('img[src!=""]'))return!1;var n=new Image;return n.src=t.src,!n.complete},e.fn.waitForImages=function(){var n=0,r=0,i,s,o;e.isPlainObject(arguments[0])?(i=arguments[0].finished,s=arguments[0].each,o=arguments[0].waitForAll):(i=arguments[0],s=arguments[1],o=arguments[2]),i=i||e.noop,s=s||e.noop,o=!!o;if(!e.isFunction(i)||!e.isFunction(s))throw new TypeError("An invalid callback was supplied.");return this.each(function(){var u=e(this),a=[],f=e.waitForImages.hasImageProperties||[],l=/url\(\s*(['"]?)(.*?)\1\s*\)/g;o?u.find("*").andSelf().each(function(){var t=e(this);t.is("img:uncached")&&a.push({src:t.attr("src"),element:t[0]}),e.each(f,function(e,n){var r=t.css(n),i;if(!r)return!0;while(i=l.exec(r))a.push({src:i[2],element:t[0]})})}):u.find("img:uncached").each(function(){a.push({src:this.src,element:this})}),n=a.length,r=0,n===0&&i.call(u[0]),e.each(a,function(o,a){var f=new Image;e(f).bind("load."+t+" error."+t,function(e){r++,s.call(a.element,r,n,e.type=="load");if(r==n)return i.call(u[0]),!1}),f.src=a.src})})}})(jQuery);